{
    "_links": {
        "executionSystem": {
            "href": "https://agave.iplantc.org/systems/v2/cshl-compute-01"
        },
        "history": {
            "href": "https://agave.iplantc.org/apps/v2/PCA-0.0.1u3/history"
        },
        "metadata": {
            "href": "https://agave.iplantc.org/meta/v2/data/?q=%7B%22associationIds%22%3A%228952192547083260391-242ac117-0001-005%22%7D"
        },
        "owner": {
            "href": "https://agave.iplantc.org/profiles/v2/lwang"
        },
        "permissions": {
            "href": "https://agave.iplantc.org/apps/v2/PCA-0.0.1u3/pems"
        },
        "self": {
            "href": "https://agave.iplantc.org/apps/v2/PCA-0.0.1u3"
        },
        "storageSystem": {
            "href": "https://agave.iplantc.org/systems/v2/data.iplantcollaborative.org"
        }
    },
    "available": true,
    "checkpointable": false,
    "defaultMaxRunTime": null,
    "defaultMemoryPerNode": 1,
    "defaultNodeCount": 1,
    "defaultProcessorsPerNode": 1,
    "defaultQueue": "debug",
    "deploymentPath": "/api/v2/apps/PCA-0.0.1u3.zip",
    "deploymentSystem": "data.iplantcollaborative.org",
    "executionSystem": "cshl-compute-01",
    "executionType": "HPC",
    "helpURI": "https://stat.ethz.ch/R-manual/R-patched/library/stats/html/prcomp.html",
    "icon": null,
    "id": "PCA-0.0.1u3",
    "inputs": [
        {
            "details": {
                "argument": "-i ",
                "description": "Marker file needs to be in Hapmap format",
                "label": "Marker file",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "input",
            "semantics": {
                "fileTypes": [
                    "raw-0"
                ],
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "xs:string"
                ]
            },
            "value": {
                "default": "",
                "enquote": false,
                "order": 0,
                "required": true,
                "validator": null,
                "visible": true
            }
        }
    ],
    "isPublic": true,
    "label": "PCA",
    "lastModified": "2017-12-05T08:56:34.000-06:00",
    "longDescription": "PCA function performs PCA with R's prcomp function. It takes a marker file in Hapmap format and outputs population structure (pca_output.txt, formatted for TASSEL), eigenvalues (eigval_out), scree plot (scree_out.png), and pairwise plot of the first three PCs (pcplot_out.png)",
    "modules": [],
    "name": "PCA",
    "ontology": [],
    "outputs": [
        {
            "details": {
                "description": "Output filename",
                "label": "File with PCA results"
            },
            "id": "output",
            "semantics": {
                "fileTypes": [
                    "raw-0"
                ],
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "http://sswapmeet.sswap.info"
                ]
            },
            "value": {
                "default": "pca_output.txt",
                "order": 0,
                "validator": null
            }
        },
        {
            "details": {
                "description": "Output filename",
                "label": "pcplot PCA results"
            },
            "id": "output1",
            "semantics": {
                "fileTypes": [
                    "raw-0"
                ],
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "http://sswapmeet.sswap.info"
                ]
            },
            "value": {
                "default": "pcplot_out.png",
                "order": 0,
                "validator": null
            }
        },
        {
            "details": {
                "description": "Output filename",
                "label": "scree_out PCA results"
            },
            "id": "output2",
            "semantics": {
                "fileTypes": [
                    "raw-0"
                ],
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "http://sswapmeet.sswap.info"
                ]
            },
            "value": {
                "default": "scree_out.png",
                "order": 0,
                "validator": null
            }
        }
    ],
    "owner": "lwang",
    "parallelism": "SERIAL",
    "parameters": [
        {
            "details": {
                "argument": "-m ",
                "description": "Choose the method (pca or mds) for PCA",
                "label": "PCA method",
                "repeatArgument": false,
                "showArgument": true
            },
            "id": "model",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "xs:string"
                ]
            },
            "value": {
                "default": "pca",
                "enquote": false,
                "enum_values": [
                    {
                        "pca": "pca"
                    },
                    {
                        "mds": "mds"
                    }
                ],
                "order": 0,
                "required": true,
                "type": "enumeration",
                "visible": true
            }
        },
        {
            "details": {
                "argument": "-n ",
                "description": "Number of PCs to be output",
                "label": "Number of PCs",
                "repeatArgument": false,
                "showArgument": true
            },
            "id": "numPCs",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "xs:integer"
                ]
            },
            "value": {
                "default": 3,
                "enquote": false,
                "order": 1,
                "required": true,
                "type": "number",
                "validator": null,
                "visible": true
            }
        }
    ],
    "revision": 3,
    "shortDescription": "Perform PCA with R's prcomp function",
    "tags": [
        "GWAS"
    ],
    "templatePath": "pca_wrapper.sh",
    "testPath": "pca_test_wrapper.sh",
    "uuid": "8952192547083260391-242ac117-0001-005",
    "version": "0.0.1"
}
